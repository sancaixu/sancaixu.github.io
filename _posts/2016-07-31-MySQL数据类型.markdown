---
layout: post
title: MySQL数据类型
date: 2016-07-31 09:11:24.000000000 +09:00
tags: MySQL

---

#### 一、列类型参考

MySQL有4种数据类型，分别为[数值型](#mark-数值类型)，[串类型](#mark-text)，[日期和时间类型](#mark-date)，[NULL值](#mark-null)。


##### <a name="mark-数值类型"></a> 1.1 数值类型

MySQL支持所有标准SQL数值数据类型。

对于整数类型，如果指定了`AUTO_INCREMENT`属性，则必须为`PRIMARY KEY`或者`UNIQUE`索引。如果将`NULL`插入 `AUTO_INCREMENT` 列将会插入一个大于该列当中当前的最大值。如果指定了`UNSIGNED`属性，则相应的整数不允许取负值。

如果指定了`ZEROFILE`属性，则用前导零填充数值类型的值已达到列显示的宽度。

##### 1.1.1 TINYINT
 
~~~mysql
说明：非常小整数 

存储需求：1字节

允许属性：AUTO_INCREMENT, UNSIGNED,ZEROFILL

取值范围：-128到127，如果为UNSIGNED则为0到255

缺省值：如果列可为NULL，则为NULL，如果为NOT NULL 则为0
~~~

##### 1.1.2 SMALLINT 

~~~
说明：较小整数 

存储需求：2字节

允许属性：AUTO_INCREMENT, UNSIGNED,ZEROFILL

取值范围：-37268到32767，如果为UNSIGNED则为0到65535

缺省值：如果列可为NULL，则为NULL，如果为NOT NULL 则为0
~~~

##### 1.1.3 MEDIUMINT

~~~
说明：中等整数

存储需求：3字节

允许属性：AUTO_INCREMENT, UNSIGNED,ZEROFILL

取值范围：-8388608到8388607，如果为UNSIGNED则为0到1677215

缺省值：如果列可为NULL，则为NULL，如果为NOT NULL 则为0
~~~

##### 1.1.4 INT或INTEGER

~~~
说明：标准整数

存储需求：4字节

允许属性：AUTO_INCREMENT, UNSIGNED, ZEROFILL

取值范围：-2147483648到2147483647，如果为 UNSIGNED 则为0到4284867295

缺省值：如果列可为 NULL，则为 NULL ，如果为 NOT NULL 则为0
~~~

##### 1.1.5 BIGINT

~~~
说明：大整数

存储需求：8字节

允许属性：AUTO_INCREMENT, UNSIGNED, ZEROFILL

取值范围：-9223372036854775808到9223372036854775807，如果为 UNSIGNED 则为0到18446744073709551615

缺省值：如果列可为 NULL，则为 NULL，如果为 NOT NULL 则为0
~~~


##### 1.1.6 FLOAT

~~~
说明：单精度浮点数

存储需求：4字节

允许属性：ZEROFILL

取值范围：最小非零值为±1.75494351E-38;最大非零值为±3.402823466E+38

缺省值：如果列可为 NULL，则为 NULL，如果为 NOT NULL 则为0
~~~

##### 1.1.7 DOUBLE

~~~
说明：双精度浮点数

存储需求：8字节

允许属性：ZEROFILL

取值范围：最小非零值为±2.2250738585072014E-308;最大非零值为±1.7976931348623157E+308

缺省值：如果列可为 NULL，则为 NULL，如果为 NOT NULL 则为0
~~~

##### 1.1.8 DECIMAL或者DEC

~~~
说明：一个串的浮点数

存储需求：如果M>D，为M+2否则为D+2

允许属性：ZEROFILL

取值范围：最大取值范围与DOUBLE相同

缺省值：如果列可为 NULL，则为 NULL，如果为 NOT NULL 则为0
~~~

##### <a name="mark-date"></a> 2.日期和时间类型

表示时间值的日期和时间类型为`DATETIME`、`DATE`、`TIMESTAMP`、`TIME`和`YEAR`。

每个时间类型有一个有效值范围和一个"零"值，当指定不合法的MySQL不能表示的值时使用"零"值。

TIMESTAMP类型有专有的自动更新特性。

##### 1.2.1 DATE

~~~
说明：YYYY-MM-DD 格式的日期

存储需求：3字节

允许属性：除通用属性外无其他属性

取值范围：“1000-01-01” 到“9999-12-31”

零值：”0000-00-00“

缺省值：如果列可为 NULL，则为 NULL，如果为 NOT NULL 则为零值
~~~

##### 1.2.2 TIME

~~~
说明：hh:mm:ss 格式的时间（负值为 -hh:mm:ss）；表示占用的时间，但也可以作为日常的时间

存储需求：3字节

允许属性：除通用属性外无其他属性

取值范围：“-838:59:59” 到“-838:59:59”

零值：”00:00:00“

缺省值：如果列可为 NULL，则为 NULL，如果为 NOT NULL 则为零值
~~~

##### 1.2.3 YEAR

~~~
说明：YYYY 格式表示的年份

存储需求：1字节

允许属性：除通用属性外无其他属性

取值范围：“1900” 到“2155”

零值：”0000“

缺省值：如果列可为 NULL，则为 NULL，如果为 NOT NULL 则为零值
~~~


##### 1.2.4 DATETIME

~~~
说明：YYYY-MM-DD hh:mm:ss 格式表示的日期和时间

存储需求：8字节

允许属性：除通用属性外无其他属性

取值范围：“1000-01-01 00:00:00” 到“9999-12-31 23:59:59”

零值：”0000-00-00 00:00:00“

缺省值：如果列可为 NULL，则为 NULL，如果为 NOT NULL 则为零值
~~~

##### 1.2.5 TIMESTAMP

~~~
说明：YYYYMMDDhhmmss 格式表示的日期和时间

存储需求：4字节

允许属性：除通用属性外无其他属性

取值范围：“19700101000000” 到 2037年的某个时刻

缺省值：当前的日期和时间，注意 DESCRIBE 和 SHOW COLLUMNS 报告缺省值为NULL
~~~

##### <a name="mark-text"></a> 3.字符串类型

##### 1.3.1 CHAR(M)

~~~
说明：0到M字节长的定长字符串，M应该为一个0到255之间的证书。短于M个字符的串，存储进右边补空格。长于M个字符串的存储是剪断为长度是M的串。在检索时去掉后跟的空格。

存储需求：0到M字节

允许属性：BINARY

缺省值：如果列可为NULL，则为NULL，如果为NOT NULL 则为""

比较：不区分大小写（如果具有BINARY属性，则区分大小写）
~~~

##### 1.3.2  VARCHAR(M)

~~~
说明：0到M字节长的定长字符串，M应该为一个0到255之间的证书。短于M个字符的串，存储时后跟的空格被去掉。存储时，大于M字符的串剪短为M个字符。

存储需求：0到M个字节

允许属性：BINARY

缺省值：如果列可为 NULL，则为 NULL，如果为 NOT NULL 则为""

比较：不区分大小写（如果具有BINARY属性，则区分大小写）
~~~

##### 1.3.3 TINYBLOB

~~~
说明：小BLOB值

存储需求：值的长度加上用于记录长度的1个字节

允许属性：除通用属性外无其他属性

缺省值：如果列可为 NULL，则为 NULL，如果为 NOT NULL 则为""

允许长度：0到255

比较：区分大小写
~~~

##### 1.3.4 BLOB

~~~
说明：常规大小的 BLOB 值

存储需求：值的长度加上用于记录长度的2个字节

允许属性：除通用属性外无其他属性

允许长度：0到65535

缺省值：如果列可为 NULL，则为 NULL，如果为 NOT NULL 则为“”

比较：区分大小写
~~~

##### 1.3.5 MEDIUMBLOB 

~~~
说明：中等大小的 BLOB 值

存储需求：值的长度加上用于记录长度的3个字节

允许属性：除通用属性外无其他属性

允许长度：0-16777215字节

缺省值：如果列可为 NULL，则为 NULL，如果为 NOT NULL 则为“”

比较：区分大小写
~~~

##### 1.3.6 LONGBLOB 大BLOB，

~~~
说明：大BLOB值

存储需求：值的长度加上用于记录长度的4个字节

允许属性：除通用属性外无其他属性

允许长度：0-4294967295字节

缺省值：如果列可为 NULL，则为 NULL，如果为 NOT NULL 则为“”

比较：区分大小写
~~~

##### 1.3.7 TINYTEXT

~~~
说明：短文本字符串

存储需求：值的长度加上用于记录长度的2个字节

允许属性：除通用属性外无其他属性

允许长度：0-255字节

缺省值：如果列可为 NULL，则为 NULL，如果为 NOT NULL 则为“”
  
比较：区分大小写

~~~

##### 1.3.8 TEXT

~~~
说明：常规大小的TEXT值

存储需求：值的长度加上用于记录长度的2个字节

允许属性：除通用属性外无其他属性

允许长度：0-65535字节

缺省值：如果列可为 NULL，则为 NULL，如果为 NOT NULL 则为“”
  
比较：不区分大小写
~~~

##### 1.3.9 MEDIUMTEXT

~~~
说明：中等大小的TEXT值

存储需求：值的长度加上用于记录长度的3个字节

允许属性：除通用属性外无其他属性

允许长度：0-16777215字节

缺省值：如果列可为 NULL，则为 NULL，如果为 NOT NULL 则为“”
  
比较：不区分大小写
~~~

##### 1.3.10 LONGTEXT` 极大文本数据，0-4294967295字节

~~~
说明：极大的TEXT值

存储需求：值的长度加上用于记录长度的4个字节

允许属性：除通用属性外无其他属性

允许长度：0-4294967295字节

缺省值：如果列可为 NULL，则为 NULL，如果为 NOT NULL 则为“”
  
比较：不区分大小写
~~~

##### 1.3.11 ENUM 

~~~
说明：枚举，列值可赋予值列表中的某个成员

存储需求：值的长度加上用于记录长度的4个字节

允许属性：除通用属性外无其他属性

允许长度：0到255个成员的枚举1个字节，对255到65535个成员的枚举2个字节

缺省值：如果列可为 NULL，则为 NULL，如果为 NOT NULL 则为第一个枚举值
  
比较：不区分大小写
~~~


##### 1.3.12 SET 

~~~
说明：集合，列值可赋予值列表中的某个成员

存储需求：值的长度加上用于记录长度的4个字节

允许属性：除通用属性外无其他属性

允许长度：1字节（1到8个成员集合），2字节（9-16个成员集合），3字节（17到24个成员集合），4字节（25到32个成员集合）或者8字节（33到64个成员集合）

缺省值：如果列可为 NULL，则为 NULL，如果为 NOT NULL 则为“”空集
  
比较：不区分大小写
~~~

##### <a name="mark-null"></a> 1.4 NULL值

`NULL`是一种“无类型”的值。他唱呗称为“无值”、“未知值”、“丢失的值”、“没有上述值”等等。可将NULL值插入表中，也可以冲表中检索他们，测试这个值是否为NULL，但不能对NULL进行算术运算。








